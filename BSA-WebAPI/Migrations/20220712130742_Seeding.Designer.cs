// <auto-generated />
using System;
using BSA_WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSA_WebAPI.Migrations
{
    [DbContext(typeof(BsaContext))]
    [Migration("20220712130742_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BSA_WebAPI.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("authorId");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("teamId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreateAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9292),
                            Deadline = new DateTime(2022, 8, 11, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9294),
                            Description = "Desc1",
                            Name = "Name1",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreateAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9301),
                            Deadline = new DateTime(2022, 7, 22, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9304),
                            Description = "Desc1",
                            Name = "Name1",
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("BSA_WebAPI.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("finishedAt");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("PerformerId")
                        .HasColumnType("int")
                        .HasColumnName("performerId");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("projectId");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9310),
                            Description = "Desc1",
                            Name = "Name1",
                            PerformerId = 3,
                            ProjectId = 1,
                            State = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9316),
                            Description = "Desc2",
                            Name = "Name2",
                            PerformerId = 4,
                            ProjectId = 2,
                            State = 0
                        });
                });

            modelBuilder.Entity("BSA_WebAPI.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[name] IS NOT NULL");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9198),
                            Name = "Team1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9254),
                            Name = "Team2"
                        });
                });

            modelBuilder.Entity("BSA_WebAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthDay");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastName");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("registeredAt");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("teamId");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9261),
                            Email = "nikitamikhalchenko@gmail.com",
                            FirstName = "Nikita",
                            LastName = "Mikhalchenko",
                            RegisteredAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9264)
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9269),
                            Email = "email1@gmail.com",
                            FirstName = "Name1",
                            LastName = "LastName1",
                            RegisteredAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9272)
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9276),
                            Email = "email2@gmail.com",
                            FirstName = "Name2",
                            LastName = "LastName2",
                            RegisteredAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9279),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            BirthDay = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9282),
                            Email = "email3@gmail.com",
                            FirstName = "Name3",
                            LastName = "LastName3",
                            RegisteredAt = new DateTime(2022, 7, 12, 16, 7, 41, 758, DateTimeKind.Local).AddTicks(9285),
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("BSA_WebAPI.Models.Project", b =>
                {
                    b.HasOne("BSA_WebAPI.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BSA_WebAPI.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BSA_WebAPI.Models.Task", b =>
                {
                    b.HasOne("BSA_WebAPI.Models.User", "Performer")
                        .WithMany()
                        .HasForeignKey("PerformerId");

                    b.HasOne("BSA_WebAPI.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Performer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BSA_WebAPI.Models.User", b =>
                {
                    b.HasOne("BSA_WebAPI.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
